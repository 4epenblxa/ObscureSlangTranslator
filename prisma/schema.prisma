generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model moderators {
  id          Int         @id
  promoted_by Int
  users       users       @relation(fields: [id], references: [id])
  categories  categories?
  staging     staging[]
  telemetry   telemetry[]
}

model obscure {
  id         Int          @id @default(autoincrement())
  term       String
  value      String
  synonyms   String[]
  staging    staging[]
  telemetry  telemetry[]
  categories categories[] @relation("category_to_obscure")
}

model staging {
  id          Int             @id @default(autoincrement())
  status      staging_status? @default(waiting)
  created     DateTime        @default(now()) @db.Timestamp(6)
  updated     DateTime        @default(now()) @db.Timestamp(6)
  term        String
  value       String
  reviewed_by Int?
  accepted_as Int?
  author      Int
  obscure     obscure?        @relation(fields: [accepted_as], references: [id])
  users       users           @relation(fields: [author], references: [id])
  moderators  moderators?     @relation(fields: [reviewed_by], references: [id])
}

model categories {
  id         Int        @id @default(autoincrement())
  value      String
  created    DateTime   @default(now()) @db.Timestamp(6)
  updated    DateTime   @default(now()) @db.Timestamp(6)
  author     Int
  moderators moderators @relation(fields: [id], references: [id])
  obscure    obscure[]  @relation("category_to_obscure")
}

model telemetry {
  id                Int         @id @default(autoincrement())
  requested_term_id Int?
  author            Int
  is_useful         Boolean?
  created           DateTime    @default(now()) @db.Timestamp(6)
  moderated_at      DateTime?   @db.Timestamp(6)
  moderated_by      Int?
  origin_message    String?
  users             users       @relation(fields: [author], references: [id])
  moderators        moderators? @relation(fields: [moderated_by], references: [id])
  obscure           obscure?    @relation(fields: [requested_term_id], references: [id])
}

model users {
  id                Int         @id @default(autoincrement())
  telegram_id       Int?        @unique
  telegram_username String?
  moderators        moderators?
  staging           staging[]
  telemetry         telemetry[]
}

enum staging_status {
  waiting
  accepted
  declined
  request_changes
  synonym
}
